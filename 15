import pandas as pd

#init data
data1 = {
    'Make': ['utv/atv'],
    'Model': ['All Model'],
    'Vendor Code': ['NACH'],
    'Vendor Name': ['NACHMAN INTERNATIONAL CO. LTD'],
    
    'MPN': ['AT-01440'],
    
    'AD LIST NUMBER': ['128107'],
    
    'VENDOR NOTES': ['"*** AT-01450 ALSO FITS ON MC/ MX APPLICATION, PLEASE INQUIRE FOR DETAILS. *** AC-01973 NOTE: THERE ARE TWO POSSILBLE STATORS FOR 04-05 SPORTSMAN 600 & 700 MACHINES, THIS ONE HAS 18 CHARGE POLES, THE OTHER HAS 11 CHARGE POLES, PLEASE ENSURE YOUR MACHINE HAS 18 CHARGING POLES. *** AC-01958 NOTE: 1995-99  YFM 350 WOLVERINE HAS TWO POSSIBLE STATORS, THIS STATOR HAS AND EXTERNAL DIAMETER OF 93MM.   ;OEM: 420685630, 420685631, 420685632, 420685638 " '],}


#list all models
list_models = [

'TRX500FA FourTrax Foreman Rubicon',
'TRX500FGA FourTrax Foreman Rubicon GPScape',
'TRX500FE FourTrax Foreman 4x4 ES',
'TRX500FM FourTrax Foreman 4x4',
'TRX500FPE FourTrax Foreman 4x4 ES w/Power Steering',
'TRX500FPM FourTrax Foreman 4x4 w/ Power Steering',
'TRX500TM FourTrax Foreman',
'TRX500FPA FourTrax Foreman Rubicon with EPS',
'TRX500FM1 FourTrax Foreman 4x4',
'TRX500FE1 FourTrax Foreman 4x4 ES',
'TRX500FM2 FourTrax Foreman 4x4 with EPS',
'TRX500FE2 FourTrax Foreman 4x4 ES with EPS',
'TRX500FM5 FourTrax Foreman Rubicon',
'TRX500FM6 FourTrax Foreman Rubicon EPS',
'TRX500FM6D FourTrax Foreman Rubicon EPS DLX',
'TRX500FA5 FourTrax Foreman Rubicon Auto DCT',
'TRX500FA6 FourTrax Foreman Rubicon Auto DCT EPS',
'TRX500FA6D FourTrax Foreman Rubicon Auto DCT EPS D',
'TRX500FA7 FourTrax Foreman Rubicon Auto DCT EPS DL',
'TRX500FM7 FourTrax Foreman Rubicon EPS DLX'


]

#Range of Years
years = list(range(2005, 2012))

#Functions/Syntax to generate the Dataframe for each model

def generate_df(model, data, year):
    data_copy = data.copy()
    data_copy['Model'] = model
    data_copy['Year'] = year
    return pd.DataFrame(data_copy)

dfs=[]
for year in years:
    df1 = pd.concat([generate_df(model,data1, year) for model in list_models], ignore_index = True)
    dfs.append(df1)
    
#Concatenate all DF's created
final_df = pd.concat(dfs, ignore_index=True)

#Display
final_df
