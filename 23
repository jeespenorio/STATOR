import pandas as pd

#init data
data1 = {
    'Make': ['utv/atv'],
    'Model': ['All Model'],
    'Vendor Code': ['NACH'],
    'Vendor Name': ['NACHMAN INTERNATIONAL CO. LTD'],
    
    'MPN': ['AT-01479'],
    
    'AD LIST NUMBER': ['128199'],
    
    'VENDOR NOTES': ['"*** AT-01450 ALSO FITS ON MC/ MX APPLICATION, PLEASE INQUIRE FOR DETAILS. *** AC-01973 NOTE: THERE ARE TWO POSSILBLE STATORS FOR 04-05 SPORTSMAN 600 & 700 MACHINES, THIS ONE HAS 18 CHARGE POLES, THE OTHER HAS 11 CHARGE POLES, PLEASE ENSURE YOUR MACHINE HAS 18 CHARGING POLES. *** AC-01958 NOTE: 1995-99  YFM 350 WOLVERINE HAS TWO POSSIBLE STATORS, THIS STATOR HAS AND EXTERNAL DIAMETER OF 93MM.   ;OEM: 3430-053 " '],}


#list all models
list_models = [

'375 Auto 2x4',
'375 Auto 4x4',
'400 2x4',
'400 2x4 Auto',
'400 4x4',
'400 4x4 ACT',
'400 4x4 Auto',
'400 4x4 Auto ACT',
'400 4x4 Auto LE',
'400 4x4 Auto MRP',
'400 4x4 Auto TBX',
'400 4x4 Auto TRV',
'400 4x4 Auto TRV Plus',
'400 4x4 Auto VP',
'400 4x4 VP',
'400 2x4 FIS',
'400 4x4 FIS',
'400 4x4 MRP',
'500 4x4',
'500 4x4 Auto',
'500 4x4 Auto LE',
'500 4x4 Auto M4',
'500 4x4 Auto TBX',
'500 4x4 Auto TRV',
'500 4x4 FIS',
'500 4x4 Auto FIS',
'500 4x4 Auto MRP',
'500 4x4 MRP',
'650 4x4 Auto',
'650 4x4 Auto LE',
'650 H1 4x4 Auto',
'650 H1 4x4 Auto LE',
'650 H1 4x4 Auto SE',
'650 H1 4x4 Auto TBX',
'650 H1 4x4 Auto TRV',
'650 H1 4x4 Auto TRV Plus',
'650 H1 4x4 Auto TRV Plus LE',
'650 V-2 4x4 Auto',
'650 V-2 4x4 Auto LE/TS',
'Prowler 650 4x4 Auto',
'Prowler 650 H1',
'Prowler XT 650 4x4 Auto',
'Prowler XT 650 4x4 Auto M4',
'Prowler XT 650 H1',
'650 4x4 Auto TBX',
'650 V-2 4x4 Auto MRP',
'650 H1 4x4 Auto Mud Pro',
'LT-A400 Eiger 2x4 Auto',
'LT-A400F Eiger 4x4 Auto',
'LT-A400F KingQuad AS',
'LT-A400F KingQuad ASi',
'LT-F400F Eiger 4x4',
'LT-F400F KingQuad FS',
'LT-F400 Eiger 2x4',
'LT-F400F KingQuad FSi'

]

#Range of Years
years = list(range(2002, 2011))

#Functions/Syntax to generate the Dataframe for each model

def generate_df(model, data, year):
    data_copy = data.copy()
    data_copy['Model'] = model
    data_copy['Year'] = year
    return pd.DataFrame(data_copy)

dfs=[]
for year in years:
    df1 = pd.concat([generate_df(model,data1, year) for model in list_models], ignore_index = True)
    dfs.append(df1)
    
#Concatenate all DF's created
final_df = pd.concat(dfs, ignore_index=True)

#Display
final_df
